name: Deploy Vector Collector

on:
  push:
    branches:
      - main

jobs:
  deploy-dev:
    runs-on: ubuntu-latest
    environment:
      name: development

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Parse product
        id: product
        run: |
          PRODUCT=$(git diff --name-only origin/main...HEAD | grep '^products/' | awk -F'/' '{print $2}' | sort | uniq | head -n 1)
          echo "product=$PRODUCT" >> $GITHUB_OUTPUT

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker europe-west3-docker.pkg.dev --quiet

      - name: Generate tag
        id: tag
        run: echo "tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Parse gcp_project from tfvars
        id: tfvars
        run: |
          TFVARS_FILE=../../products/${{ steps.product.outputs.product }}/terraform.dev.tfvars
          GCP_PROJECT=$(grep -E '^ *gcp_project *=' "$TFVARS_FILE" | cut -d '"' -f2)
          if [ -z "$GCP_PROJECT" ]; then
            echo "❌ gcp_project not found in $TFVARS_FILE"
            exit 1
          fi
          echo "gcp_project=$GCP_PROJECT" >> $GITHUB_OUTPUT

      - name: Build and push image
        run: |
          IMAGE_URI="europe-west3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/vector-test-repository/my-vector-local:${{ steps.tag.outputs.tag }}"
          echo "IMAGE_URI=$IMAGE_URI"
          docker build -t "$IMAGE_URI" .
          docker push "$IMAGE_URI"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: deploy/terraform

      - name: Terraform Apply (Dev)
        run: terraform apply -auto-approve -var="image_tag=${{ steps.tag.outputs.tag }}" -var-file="../../products/${{ steps.product.outputs.product }}/terraform.dev.tfvars"
        working-directory: deploy/terraform

  deploy-prod:
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment:
      name: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Parse product
        id: product
        run: |
          PRODUCT=$(git diff --name-only origin/main...HEAD | grep '^products/' | awk -F'/' '{print $2}' | sort | uniq | head -n 1)
          echo "product=$PRODUCT" >> $GITHUB_OUTPUT

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: deploy/terraform

      - name: Terraform Apply (Prod)
        run: terraform apply -auto-approve -var="image_tag=${{ needs.deploy-dev.outputs.tag }}" -var-file="../../products/${{ steps.product.outputs.product }}/terraform.prod.tfvars"
        working-directory: deploy/terraform
